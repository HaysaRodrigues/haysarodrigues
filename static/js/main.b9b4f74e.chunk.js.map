{"version":3,"sources":["imgs/pp.jpeg","components/Menu.js","components/MainImage.js","components/story/Story.js","components/stories/RioSaoFrancisco.js","components/stories/Catimbau.js","components/stories/InteriorPernambuco.js","components/stories/Recife.js","components/about/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IconLink","props","className","href","link","target","rel","icon","color","Menu","to","faInstagram","faFlickr","Component","MainImage","src","alt","height","width","Story","this","title","firstParagraph","secondParagraph","RioSaoFrancisco","Catimbau","state","filterStoryByTitle","storyTitle","story","data","filter","word","setState","InteriorPernambuco","Recife","About","aboutMeImage","App","exact","path","component","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9b4f74e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pp.982f3903.jpeg\";","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faInstagram, faFlickr} from \"@fortawesome/free-brands-svg-icons\"\n\n\nconst IconLink = props =>\n    <a className=\"iconItem\" href={props.link} target=\"blank\" rel=\"noopener noreferrer\">\n        <FontAwesomeIcon icon={props.icon} color='#000000'/>\n    </a>;\n\nexport default class Menu extends Component {\n    render() {\n        return (\n\n            <div>\n                <nav>\n                    <div className='menuToggle'>\n                        <ul className='menu'>\n                            <li className=\"name\"><Link to={'/'}> haysa rodrigues </Link></li>\n                            <li><Link to={'/riosaofrancisco'}> rio são francisco </Link></li>\n                            <li><Link to={'/catimbau'}> catimbau </Link></li>\n                            <li><Link to={'/interiordepernambuco'}> interior de pernambuco </Link></li>\n                            <li><Link to={'/recife'}> recife </Link></li>\n                            <li><Link to={'/about'}> sobre </Link></li>\n                            <li>\n                                <a href=\"mailto:rodrigues.haysa@gmail.com\" target=\"blank\" rel=\"noopener noreferrer\">\n                                    me manda um e-mail\n                                </a>\n                            </li>\n                            <li>\n                                <div className=\"iconItems\">\n                                    <IconLink link=\"https://www.instagram.com/r.haysa/\" icon={faInstagram}/>\n                                    <IconLink link=\"https://www.flickr.com/people/haysarodrigues/\" icon={faFlickr}/>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class MainImage extends Component {\n  render() {\n    return (\n      <div className=\"mainImage\">\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/7/74/Acrobatic_tissue%2C_artistic_acrobatic_tissue.jpg\" \n          alt=\"man doing artistic acrobatic tissue\"\n          height=\"660\" \n          width=\"100%\">\n        </img>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nclass Story extends Component {\n  \n  render() {\n    return (\n      <div className='story'>\n        <h1 className='storyTitle'> {this.props.title} </h1>\n        <div className='paragraphs'>\n          <h3 className='paragraphsFont'> {this.props.firstParagraph} </h3>\n          <h3 className='paragraphsFont'> {this.props.secondParagraph} </h3>\n        </div>\n        <div className='photoGrid'>\n          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Story\n","import React, { Component } from 'react'\nimport Story from '../story/Story';\n\nconst firstParagraph = 'adeus velho chico'\nconst secondParagraph = 'diz o povo nas margens'\n\nexport default class RioSaoFrancisco extends Component {\n  render() {\n    return (\n      <div>\n        <Story \n          firstParagraph={firstParagraph} \n          secondParagraph={secondParagraph}/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Story from '../story/Story';\nimport data from '../../JSON/storyPhotos.json';\n\nexport default class Catimbau extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      firstParagraph: '',\n      secondParagraph: ''\n    }\n  }\n\n  componentDidMount() {\n    this.filterStoryByTitle('catimbau')\n  }\n  \n  filterStoryByTitle(storyTitle) {\n    let story = data.story.filter(word => word.title === storyTitle)[0];\n    this.setState({title: story.title, firstParagraph: story.firstParagraph, secondParagraph: story.secondParagraph})\n  }\n\n  render() {\n  \n    return (\n      <div>\n        <Story \n        title={this.state.title}\n        firstParagraph={this.state.firstParagraph} \n        secondParagraph={this.state.secondParagraph}/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Story from '../story/Story';\n\nconst firstParagraph = 'melhor lugar do brasil'\nconst secondParagraph = 'é PE'\n\nexport default class InteriorPernambuco extends Component {\n  render() {\n    return (\n      <div>\n        <Story firstParagraph = {firstParagraph} secondParagraph = {secondParagraph}/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Story from '../story/Story';\n\nconst firstParagraph = 'tente fazer uma foto'\nconst secondParagraph = 'para cada música de jonnhy hooker'\n\nexport default class Recife extends Component {\n  render() {\n    return (\n      <div>\n        <Story firstParagraph = {firstParagraph} secondParagraph = {secondParagraph}/>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport aboutMeImage from '../../imgs/pp.jpeg'\nimport './about.css'\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div className='aboutContainer'>\n                <h1 className='storyTitle aboutTitle'>Quem fez esse site e essas fotos?</h1>\n                <div className='imageCropper'>\n                    <img className='aboutMeImage'\n                         src={aboutMeImage}\n                         alt='foto de haysa'\n                    />\n                </div>\n\n                <p className='paragraphsFont aboutDescription'>\n                    <p>Uma cabeça inquieta e ao mesmo tempo vazia. Curiosa e\n                        entediada, encontrei na fotografia um escape enorme para\n                        fugir dos estresses do dia a dia, e descobri que com ela,\n                        eu consigo me conectar e enxeragar as coisas com outros olhares.\n                    </p>\n                    <p>\n                        Olhares esses que nem sempre fazem bem mas que abrem minha cabeça\n                        pra entender melhor que na vida nem tudo deve ser problematização.\n                        Se não a gente endoida.\n                    </p>\n                </p>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Menu from './components/Menu';\nimport MainImage from './components/MainImage';\nimport RioSaoFrancisco from './components/stories/RioSaoFrancisco'\nimport Catimbau from './components/stories/Catimbau'\nimport InteriorPernambuco from './components/stories/InteriorPernambuco'\nimport Recife from './components/stories/Recife';\nimport About from './components/about/About';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"mainContainer\">\n        <div className='menuContainer'>\n          <div className='columnMenu'>\n            <header>\n              <div>\n                <div className=\"appLeftMenu\">\n                  <Menu />\n                </div>  \n              </div>\n            </header>\n          </div>\n          <div className='container'>\n            <Switch>\n                <Route exact path='/' component={ MainImage } />\n                <Route path='/riosaofrancisco' component={ RioSaoFrancisco } />\n                <Route path='/catimbau' component={ Catimbau } />\n                <Route path='/interiordepernambuco' component={ InteriorPernambuco }/>   \n                <Route path='/recife' component={ Recife }/>\n                <Route path='/about' component={ About }/>\n            </Switch>\n          </div>\n        </div>  \n      </div>\n      <footer>feito com<span role=\"img\" aria-label=\"amor\"> &#x2661;</span></footer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}